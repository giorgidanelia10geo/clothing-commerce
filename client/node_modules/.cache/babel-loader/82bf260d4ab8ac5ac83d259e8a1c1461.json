{"ast":null,"code":"export const addItemToCart = (cartItems, cartItemToAdd) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToAdd.id);\n\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.id === cartItemToAdd.id ? { ...cartItem,\n      quantity: cartItem.quantity + 1\n    } : cartItem);\n  }\n\n  return [...cartItems, { ...cartItemToAdd,\n    quantity: 1\n  }];\n};\nexport const clearItem = (cartItems, cartItemToClear) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToClear.id);\n\n  if (existingCartItem.quantity === 1) {\n    return cartItems.map(cartItem => cartItem.id === cartItemToClear ? { ...cartItem,\n      quantity: cartItem.quantity - 1\n    } : cartItem);\n  }\n};","map":{"version":3,"sources":["/Users/gd/Documents/Dev/react/crwn-clothing/src/redux/cart/cart.utils.js"],"names":["addItemToCart","cartItems","cartItemToAdd","existingCartItem","find","cartItem","id","map","quantity","clearItem","cartItemToClear"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAG,CAACC,SAAD,EAAYC,aAAZ,KAA8B;AACzD,QAAMC,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CAAeC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EAAzD,CAAzB;;AAEA,MAAIH,gBAAJ,EAAsB;AACpB,WAAOF,SAAS,CAACM,GAAV,CAAcF,QAAQ,IAC3BA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EAA9B,GACI,EAAE,GAAGD,QAAL;AAAeG,MAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAoB;AAA7C,KADJ,GAEIH,QAHC,CAAP;AAKD;;AAED,SAAO,CAAC,GAAGJ,SAAJ,EAAe,EAAE,GAAGC,aAAL;AAAoBM,IAAAA,QAAQ,EAAE;AAA9B,GAAf,CAAP;AACD,CAZM;AAcP,OAAO,MAAMC,SAAS,GAAG,CAACR,SAAD,EAAYS,eAAZ,KAAgC;AACvD,QAAMP,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CAAeC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBI,eAAe,CAACJ,EAA3D,CAAzB;;AAEA,MAAIH,gBAAgB,CAACK,QAAjB,KAA8B,CAAlC,EAAqC;AACnC,WAAOP,SAAS,CAACM,GAAV,CAAcF,QAAQ,IAC3BA,QAAQ,CAACC,EAAT,KAAgBI,eAAhB,GACI,EAAE,GAAGL,QAAL;AAAeG,MAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAoB;AAA7C,KADJ,GAEIH,QAHC,CAAP;AAKD;AACF,CAVM","sourcesContent":["export const addItemToCart = (cartItems, cartItemToAdd) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToAdd.id)\n\n  if (existingCartItem) {\n    return cartItems.map(cartItem =>\n      cartItem.id === cartItemToAdd.id\n        ? { ...cartItem, quantity: cartItem.quantity + 1 }\n        : cartItem\n    )\n  }\n\n  return [...cartItems, { ...cartItemToAdd, quantity: 1 }]\n}\n\nexport const clearItem = (cartItems, cartItemToClear) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToClear.id)\n\n  if (existingCartItem.quantity === 1) {\n    return cartItems.map(cartItem =>\n      cartItem.id === cartItemToClear\n        ? { ...cartItem, quantity: cartItem.quantity - 1 }\n        : cartItem\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}