{"ast":null,"code":"import _regeneratorRuntime from\"/Users/gd/Documents/Dev/react/crwn-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/Users/gd/Documents/Dev/react/crwn-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/Users/gd/Documents/Dev/react/crwn-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import firebase from'firebase/app';import'firebase/firestore';import'firebase/auth';var config={apiKey:\"AIzaSyB5bxT9pE40QZUVmkmdsUwYwG9UBv8xBKA\",authDomain:\"crwn-clothing-34533.firebaseapp.com\",projectId:\"crwn-clothing-34533\",storageBucket:\"crwn-clothing-34533.appspot.com\",messagingSenderId:\"709757477191\",appId:\"1:709757477191:web:662a21080263a6e09aac62\",measurementId:\"G-8KPLB75D40\"};export var createUserProfileDocument=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(userAuth,otherData){var userRef,snapShot,displayName,email,createdAt;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(userAuth){_context.next=2;break;}return _context.abrupt(\"return\");case 2:userRef=firestore.doc(\"users/\".concat(userAuth.uid));_context.next=5;return userRef.get();case 5:snapShot=_context.sent;if(snapShot.exists){_context.next=17;break;}displayName=userAuth.displayName,email=userAuth.email;createdAt=new Date();_context.prev=9;_context.next=12;return userRef.set(_objectSpread({displayName:displayName,email:email,createdAt:createdAt},otherData));case 12:_context.next=17;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](9);console.log('Error creating user',_context.t0.message);case 17:return _context.abrupt(\"return\",userRef);case 18:case\"end\":return _context.stop();}}},_callee,null,[[9,14]]);}));return function createUserProfileDocument(_x,_x2){return _ref.apply(this,arguments);};}();export var addCollectionAndDocuments=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(collectionkey,objToAdd){var collectionRef,batch;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:collectionRef=firestore.collection(collectionkey);batch=firestore.batch();objToAdd.forEach(function(obj){var newDocRef=collectionRef.doc();batch.set(newDocRef,obj);});_context2.next=5;return batch.commit();case 5:return _context2.abrupt(\"return\",_context2.sent);case 6:case\"end\":return _context2.stop();}}},_callee2);}));return function addCollectionAndDocuments(_x3,_x4){return _ref2.apply(this,arguments);};}();export var convertCollectionSnapshotToMap=function convertCollectionSnapshotToMap(collections){var transformedCollection=collections.docs.map(function(doc){var _doc$data=doc.data(),title=_doc$data.title,items=_doc$data.items;return{routeName:encodeURI(title.toLowerCase()),id:doc.id,title:title,items:items};});return transformedCollection.reduce(function(accum,collection){accum[collection.title.toLowerCase()]=collection;return accum;},{});};export var getCurrentUser=function getCurrentUser(){return new Promise(function(resolve,reject){var unsubscribe=auth.onAuthStateChanged(function(userAuth){unsubscribe();resolve(userAuth);},reject);});};firebase.initializeApp(config);export var auth=firebase.auth();export var firestore=firebase.firestore();export var googleProvider=new firebase.auth.GoogleAuthProvider();googleProvider.setCustomParameters({prompt:'select_account'});export var googleSignIn=function googleSignIn(){return auth.signInWithPopup(googleProvider).catch(function(e){return console.log(e);});};export default firebase;","map":{"version":3,"sources":["/Users/gd/Documents/Dev/react/crwn-clothing/client/src/utils/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","otherData","userRef","firestore","doc","uid","get","snapShot","exists","displayName","email","createdAt","Date","set","console","log","message","addCollectionAndDocuments","collectionkey","objToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","commit","convertCollectionSnapshotToMap","collections","transformedCollection","docs","map","data","title","items","routeName","encodeURI","toLowerCase","id","reduce","accum","getCurrentUser","Promise","resolve","reject","unsubscribe","auth","onAuthStateChanged","initializeApp","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","googleSignIn","signInWithPopup","catch","e"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\nconst config = {\n  apiKey: \"AIzaSyB5bxT9pE40QZUVmkmdsUwYwG9UBv8xBKA\",\n  authDomain: \"crwn-clothing-34533.firebaseapp.com\",\n  projectId: \"crwn-clothing-34533\",\n  storageBucket: \"crwn-clothing-34533.appspot.com\",\n  messagingSenderId: \"709757477191\",\n  appId: \"1:709757477191:web:662a21080263a6e09aac62\",\n  measurementId: \"G-8KPLB75D40\"\n}\n\nexport const createUserProfileDocument = async (userAuth, otherData) => {\n  if (!userAuth) return\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`)\n\n  const snapShot = await userRef.get()\n\n  if (!snapShot.exists) {\n    const { displayName, email } = userAuth\n    const createdAt = new Date()\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...otherData\n      })\n    } catch (err) {\n      console.log('Error creating user', err.message)\n    }\n  }\n  return userRef\n}\n\nexport const addCollectionAndDocuments = async (collectionkey, objToAdd) => {\n  const collectionRef = firestore.collection(collectionkey)\n\n  const batch = firestore.batch()\n  objToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc()\n    batch.set(newDocRef, obj)\n  })\n  return await batch.commit()\n}\n\nexport const convertCollectionSnapshotToMap = collections => {\n  const transformedCollection = collections.docs.map(doc => {\n    const { title, items } = doc.data()\n\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    }\n  })\n  return transformedCollection.reduce((accum, collection) => {\n    accum[collection.title.toLowerCase()] = collection\n    return accum\n  }, {})\n}\n\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = auth.onAuthStateChanged(userAuth => {\n      unsubscribe()\n      resolve(userAuth)\n    }, reject)\n  })\n}\n\nfirebase.initializeApp(config)\nexport const auth = firebase.auth()\nexport const firestore = firebase.firestore()\n\nexport const googleProvider = new firebase.auth.GoogleAuthProvider()\ngoogleProvider.setCustomParameters({ prompt: 'select_account' })\nexport const googleSignIn = () => (\n  auth.signInWithPopup(googleProvider)\n    .catch(e => console.log(e))\n)\n\nexport default firebase"]},"metadata":{},"sourceType":"module"}