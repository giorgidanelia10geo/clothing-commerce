{"ast":null,"code":"import _regeneratorRuntime from\"/Users/gd/Documents/Dev/react/crwn-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(clearCartOnSignOut),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(onSignOutSuccess),_marked3=/*#__PURE__*/_regeneratorRuntime.mark(cartSaga);import{takeLatest,put,call,all}from'redux-saga/effects';import UserActionTypes from'../user/userActionTypes';import{clearCart}from'../cart/cartAction';export function clearCartOnSignOut(){return _regeneratorRuntime.wrap(function clearCartOnSignOut$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return put(clearCart());case 2:case\"end\":return _context.stop();}}},_marked);}export function onSignOutSuccess(){return _regeneratorRuntime.wrap(function onSignOutSuccess$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return takeLatest(UserActionTypes.SIGN_OUT_SUCCESS,clearCartOnSignOut);case 2:case\"end\":return _context2.stop();}}},_marked2);}export function cartSaga(){return _regeneratorRuntime.wrap(function cartSaga$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return all([call(onSignOutSuccess)]);case 2:case\"end\":return _context3.stop();}}},_marked3);}","map":{"version":3,"sources":["/Users/gd/Documents/Dev/react/crwn-clothing/client/src/redux/cart/cart.sagas.js"],"names":["clearCartOnSignOut","onSignOutSuccess","cartSaga","takeLatest","put","call","all","UserActionTypes","clearCart","SIGN_OUT_SUCCESS"],"mappings":"kNAIiBA,kB,iDAIAC,gB,iDAIAC,Q,EAZjB,OAASC,UAAT,CAAqBC,GAArB,CAA0BC,IAA1B,CAAgCC,GAAhC,KAA2C,oBAA3C,CACA,MAAOC,CAAAA,eAAP,KAA4B,yBAA5B,CACA,OAASC,SAAT,KAA0B,oBAA1B,CAEA,MAAO,SAAUR,CAAAA,kBAAV,8IACL,MAAMI,CAAAA,GAAG,CAACI,SAAS,EAAV,CAAT,CADK,sDAIP,MAAO,SAAUP,CAAAA,gBAAV,gJACL,MAAME,CAAAA,UAAU,CAACI,eAAe,CAACE,gBAAjB,CAAmCT,kBAAnC,CAAhB,CADK,wDAIP,MAAO,SAAUE,CAAAA,QAAV,wIACL,MAAMI,CAAAA,GAAG,CAAC,CAACD,IAAI,CAACJ,gBAAD,CAAL,CAAD,CAAT,CADK","sourcesContent":["import { takeLatest, put, call, all } from 'redux-saga/effects'\nimport UserActionTypes from '../user/userActionTypes'\nimport { clearCart } from '../cart/cartAction'\n\nexport function* clearCartOnSignOut() {\n  yield put(clearCart())\n}\n\nexport function* onSignOutSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_SUCCESS, clearCartOnSignOut)\n}\n\nexport function* cartSaga() {\n  yield all([call(onSignOutSuccess)])\n}"]},"metadata":{},"sourceType":"module"}