{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/gd/Documents/Dev/react/crwn-clothing/src/components/signIn/SignIn.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../forminput/FormInput';\nimport CostumButton from '../costumbutton/CostumButton';\nimport { googleSignInStart, emailSigninStart } from '../../redux/user/userAction';\nimport './SignIn.scss';\n\nclass SignIn extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: '',\n      password: ''\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const {\n        emailSignInStart\n      } = this.props;\n      const {\n        email,\n        password\n      } = this.state;\n      emailSignInStart(email, password);\n    };\n\n    this.handleChange = e => {\n      const {\n        value,\n        name\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n  }\n\n  render() {\n    const {\n      email,\n      password\n    } = this.state;\n    const {\n      googleSignInStart\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sign-in\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Have an account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Sign in with your email and password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormInput, {\n          name: \"email\",\n          type: \"email\",\n          label: \"Email\",\n          value: email,\n          handleChange: this.handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          name: \"password\",\n          type: \"password\",\n          label: \"Password\",\n          value: password,\n          handleChange: this.handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CostumButton, {\n          type: \"submit\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CostumButton, {\n          type: \"button\",\n          onClick: googleSignInStart,\n          isGoogleSignIn: true,\n          children: \"Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSigninStart: (email, password) => dispatch(emailSigninStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/gd/Documents/Dev/react/crwn-clothing/src/components/signIn/SignIn.js"],"names":["React","Component","connect","FormInput","CostumButton","googleSignInStart","emailSigninStart","SignIn","state","email","password","handleSubmit","e","preventDefault","emailSignInStart","props","handleChange","value","name","target","setState","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport FormInput from '../forminput/FormInput'\nimport CostumButton from '../costumbutton/CostumButton'\nimport { googleSignInStart, emailSigninStart } from '../../redux/user/userAction'\n\nimport './SignIn.scss'\n\nclass SignIn extends Component {\n  state = { email: '', password: '' }\n\n  handleSubmit = async e => {\n    e.preventDefault()\n    const { emailSignInStart } = this.props\n    const { email, password } = this.state\n    emailSignInStart(email, password)\n  }\n\n  handleChange = e => {\n    const { value, name } = e.target\n    this.setState({ [name]: value })\n  }\n\n  render() {\n    const { email, password } = this.state\n    const { googleSignInStart } = this.props\n    return (\n      <div className=\"sign-in\">\n        <h2>Have an account</h2>\n        <span>Sign in with your email and password</span>\n\n        <form onSubmit={this.handleSubmit}>\n          <FormInput\n            name='email'\n            type='email'\n            label='Email'\n            value={email}\n            handleChange={this.handleChange}\n            required\n          />\n\n          <FormInput\n            name='password'\n            type='password'\n            label='Password'\n            value={password}\n            handleChange={this.handleChange}\n            required\n          />\n          <CostumButton type='submit'>Sign In</CostumButton>\n          <CostumButton\n            type='button'\n            onClick={googleSignInStart}\n            isGoogleSignIn\n          >\n            Google\n          </CostumButton>\n        </form>\n        <div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSigninStart: (email, password) => dispatch(emailSigninStart({ email, password }))\n})\n\nexport default connect(null, mapDispatchToProps)(SignIn)\n"]},"metadata":{},"sourceType":"module"}