{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga/effects';\nimport ShopActionsTypes from './shopActionsTypes';\nimport { firestore, convertCollectionSnapshotToMap } from '../../utils/firebase.utils';\nimport { fetchCollectionsFailure } from './shopActionsTypes';\nexport function* fetchCollectionsStartAsync() {\n  yield console.log('I FIRED');\n\n  try {\n    const collectionsRef = firestore.collection('collections');\n    const snapshot = yield collectionsRef.get(); //   dispatch(fetchCollectionsStart())\n    //   collectionsRef\n    //     .get()\n    //     .then(snapshot => {\n    //       const collectionsMap = convertCollectionSnapshotToMap(snapshot)\n    //       dispatch(fetchCollectionsSuccess(collectionsMap))\n    //     })\n    //     .then(err => dispatch(fetchCollectionsFailure(err)))\n  } catch (e) {}\n\n  yield put(fetchCollectionsFailure(e.message));\n}\nexport function* fetchCollectionStart() {\n  yield takeEvery(ShopActionsTypes.FETCH_COLLECTION_START, fetchCollectionsStartAsync);\n}","map":{"version":3,"sources":["/Users/gd/Documents/Dev/react/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","put","ShopActionsTypes","firestore","convertCollectionSnapshotToMap","fetchCollectionsFailure","fetchCollectionsStartAsync","console","log","collectionsRef","collection","snapshot","get","e","message","fetchCollectionStart","FETCH_COLLECTION_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,SAASC,SAAT,EAAoBC,8BAApB,QAA0D,4BAA1D;AACA,SAASC,uBAAT,QAAwC,oBAAxC;AAGA,OAAO,UAAUC,0BAAV,GAAuC;AAC5C,QAAMC,OAAO,CAACC,GAAR,CAAY,SAAZ,CAAN;;AACA,MAAI;AACF,UAAMC,cAAc,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAvB;AACA,UAAMC,QAAQ,GAAG,MAAMF,cAAc,CAACG,GAAf,EAAvB,CAFE,CAGF;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAZD,CAYE,OAAOC,CAAP,EAAU,CAAG;;AACf,QAAMZ,GAAG,CAACI,uBAAuB,CAACQ,CAAC,CAACC,OAAH,CAAxB,CAAT;AACD;AAED,OAAO,UAAUC,oBAAV,GAAiC;AACtC,QAAMhB,SAAS,CACbG,gBAAgB,CAACc,sBADJ,EAEbV,0BAFa,CAAf;AAID","sourcesContent":["import { takeEvery, call, put } from 'redux-saga/effects'\nimport ShopActionsTypes from './shopActionsTypes'\nimport { firestore, convertCollectionSnapshotToMap } from '../../utils/firebase.utils'\nimport { fetchCollectionsFailure } from './shopActionsTypes'\n\n\nexport function* fetchCollectionsStartAsync() {\n  yield console.log('I FIRED')\n  try {\n    const collectionsRef = firestore.collection('collections')\n    const snapshot = yield collectionsRef.get()\n    //   dispatch(fetchCollectionsStart())\n\n    //   collectionsRef\n    //     .get()\n    //     .then(snapshot => {\n    //       const collectionsMap = convertCollectionSnapshotToMap(snapshot)\n    //       dispatch(fetchCollectionsSuccess(collectionsMap))\n    //     })\n    //     .then(err => dispatch(fetchCollectionsFailure(err)))\n  } catch (e) { }\n  yield put(fetchCollectionsFailure(e.message))\n}\n\nexport function* fetchCollectionStart() {\n  yield takeEvery(\n    ShopActionsTypes.FETCH_COLLECTION_START,\n    fetchCollectionsStartAsync\n  )\n}"]},"metadata":{},"sourceType":"module"}