{"ast":null,"code":"import { takeLatest, put, call, all } from 'redux-saga/effects';\nimport UserActionTypes from './userActionTypes';\nimport { auth, googleProvider, createUserProfileDocument } from '../../utils/firebase.utils';\nimport { googleSignInSuccess, googleSigninFailure, emailSignInSuccess, emailSigninFailure } from './userAction';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield createUserProfileDocument(user);\n    const userSnapshot = yield userRef.get();\n    yield put(googleSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (e) {\n    yield put(googleSigninFailure(e));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGNIN_START, signInWithGoogle);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {} catch (e) {\n    yield put(emailSigninFailure(e));\n  }\n}\nexport function* OnEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGNIN_START, onEmailSignIn);\n}\n_c = OnEmailSignInStart;\nexport function* userSaga() {\n  yield all([call(onGoogleSignInStart), call(emailSigninStart)]);\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"OnEmailSignInStart\");","map":{"version":3,"sources":["/Users/gd/Documents/Dev/react/crwn-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","call","all","UserActionTypes","auth","googleProvider","createUserProfileDocument","googleSignInSuccess","googleSigninFailure","emailSignInSuccess","emailSigninFailure","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","id","data","e","onGoogleSignInStart","GOOGLE_SIGNIN_START","signInWithEmail","payload","email","password","OnEmailSignInStart","EMAIL_SIGNIN_START","onEmailSignIn","userSaga","emailSigninStart"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,yBAA/B,QAAgE,4BAAhE;AACA,SACEC,mBADF,EAEEC,mBAFF,EAGEC,kBAHF,EAIEC,kBAJF,QAKO,cALP;AAOA,OAAO,UAAUC,gBAAV,GAA6B;AAClC,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMR,IAAI,CAACS,eAAL,CAAqBR,cAArB,CAAvB;AACA,UAAMS,OAAO,GAAG,MAAMR,yBAAyB,CAACM,IAAD,CAA/C;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMhB,GAAG,CAACO,mBAAmB,CAAC;AAC5BU,MAAAA,EAAE,EAAEF,YAAY,CAACE,EADW;AACP,SAAGF,YAAY,CAACG,IAAb;AADI,KAAD,CAApB,CAAT;AAGD,GAPD,CAOE,OAAOC,CAAP,EAAU;AACV,UAAMnB,GAAG,CAACQ,mBAAmB,CAACW,CAAD,CAApB,CAAT;AACD;AACF;AAED,OAAO,UAAUC,mBAAV,GAAgC;AACrC,QAAMrB,UAAU,CAACI,eAAe,CAACkB,mBAAjB,EAAsCV,gBAAtC,CAAhB;AACD;AAED,OAAO,UAAUW,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA1B,EAA4D;AACjE,MAAI,CAEH,CAFD,CAEE,OAAON,CAAP,EAAU;AACV,UAAMnB,GAAG,CAACU,kBAAkB,CAACS,CAAD,CAAnB,CAAT;AACD;AACF;AAED,OAAO,UAAUO,kBAAV,GAA+B;AACpC,QAAM3B,UAAU,CAACI,eAAe,CAACwB,kBAAjB,EAAqCC,aAArC,CAAhB;AACD;KAFgBF,kB;AAIjB,OAAO,UAAUG,QAAV,GAAqB;AAC1B,QAAM3B,GAAG,CAAC,CAACD,IAAI,CAACmB,mBAAD,CAAL,EAA4BnB,IAAI,CAAC6B,gBAAD,CAAhC,CAAD,CAAT;AACD","sourcesContent":["import { takeLatest, put, call, all } from 'redux-saga/effects'\nimport UserActionTypes from './userActionTypes'\nimport { auth, googleProvider, createUserProfileDocument } from '../../utils/firebase.utils'\nimport {\n  googleSignInSuccess,\n  googleSigninFailure,\n  emailSignInSuccess,\n  emailSigninFailure\n} from './userAction'\n\nexport function* signInWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider)\n    const userRef = yield createUserProfileDocument(user)\n    const userSnapshot = yield userRef.get()\n    yield put(googleSignInSuccess({\n      id: userSnapshot.id, ...userSnapshot.data()\n    }))\n  } catch (e) {\n    yield put(googleSigninFailure(e))\n  }\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGNIN_START, signInWithGoogle)\n}\n\nexport function* signInWithEmail({ payload: { email, password } }) {\n  try {\n\n  } catch (e) {\n    yield put(emailSigninFailure(e))\n  }\n}\n\nexport function* OnEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGNIN_START, onEmailSignIn)\n}\n\nexport function* userSaga() {\n  yield all([call(onGoogleSignInStart), call(emailSigninStart)])\n}"]},"metadata":{},"sourceType":"module"}