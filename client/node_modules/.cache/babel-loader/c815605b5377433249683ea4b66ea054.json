{"ast":null,"code":"import _objectSpread from\"/Users/gd/Documents/Dev/react/crwn-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{CartActionTypes}from'./cartActionTypes';import{addItemToCart,clearItem}from'./cart.utils';var INITIAL_STATE={hidden:true,cartItems:[]};var cartReducer=function cartReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:INITIAL_STATE;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case CartActionTypes.CURT_TOGGLE_HIDDEN:return _objectSpread(_objectSpread({},state),{},{hidden:!state.hidden});case CartActionTypes.ADD_ITEM:return _objectSpread(_objectSpread({},state),{},{cartItems:addItemToCart(state.cartItems,action.payload)});case CartActionTypes.REMOVE_CART_ITEM:return _objectSpread(_objectSpread({},state),{},{cartItems:clearItem(state.cartItems,action.payload)});case CartActionTypes.REMOVE_ITEM_FROM_CART:return _objectSpread(_objectSpread({},state),{},{cartItems:state.cartItems.filter(function(cartItem){return cartItem.id!==action.payload.id;})});case CartActionTypes.CLEAR_CART:return _objectSpread(_objectSpread({},state),{},{cartItems:[]});default:return state;}};export default cartReducer;","map":{"version":3,"sources":["/Users/gd/Documents/Dev/react/crwn-clothing/client/src/redux/cart/cartReducer.js"],"names":["CartActionTypes","addItemToCart","clearItem","INITIAL_STATE","hidden","cartItems","cartReducer","state","action","type","CURT_TOGGLE_HIDDEN","ADD_ITEM","payload","REMOVE_CART_ITEM","REMOVE_ITEM_FROM_CART","filter","cartItem","id","CLEAR_CART"],"mappings":"wKAAA,OAASA,eAAT,KAAgC,mBAAhC,CACA,OAASC,aAAT,CAAwBC,SAAxB,KAAyC,cAAzC,CAEA,GAAMC,CAAAA,aAAa,CAAG,CACpBC,MAAM,CAAE,IADY,CAEpBC,SAAS,CAAE,EAFS,CAAtB,CAKA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAmC,IAAlCC,CAAAA,KAAkC,2DAA1BJ,aAA0B,IAAXK,CAAAA,MAAW,2CACrD,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKT,CAAAA,eAAe,CAACU,kBAArB,CACE,sCACKH,KADL,MAEEH,MAAM,CAAE,CAACG,KAAK,CAACH,MAFjB,GAIF,IAAKJ,CAAAA,eAAe,CAACW,QAArB,CACE,sCACKJ,KADL,MAEEF,SAAS,CAAEJ,aAAa,CAACM,KAAK,CAACF,SAAP,CAAkBG,MAAM,CAACI,OAAzB,CAF1B,GAIF,IAAKZ,CAAAA,eAAe,CAACa,gBAArB,CACE,sCACKN,KADL,MAEEF,SAAS,CAAEH,SAAS,CAACK,KAAK,CAACF,SAAP,CAAkBG,MAAM,CAACI,OAAzB,CAFtB,GAIF,IAAKZ,CAAAA,eAAe,CAACc,qBAArB,CACE,sCACKP,KADL,MAEEF,SAAS,CAAEE,KAAK,CAACF,SAAN,CAAgBU,MAAhB,CACT,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,EAAT,GAAgBT,MAAM,CAACI,OAAP,CAAeK,EAAnC,EADC,CAFb,GAMF,IAAKjB,CAAAA,eAAe,CAACkB,UAArB,CACE,sCACKX,KADL,MAEEF,SAAS,CAAE,EAFb,GAIF,QACE,MAAOE,CAAAA,KAAP,CA7BJ,CA+BD,CAhCD,CAkCA,cAAeD,CAAAA,WAAf","sourcesContent":["import { CartActionTypes } from './cartActionTypes'\nimport { addItemToCart, clearItem } from './cart.utils'\n\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItems: []\n}\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CartActionTypes.CURT_TOGGLE_HIDDEN:\n      return {\n        ...state,\n        hidden: !state.hidden,\n      }\n    case CartActionTypes.ADD_ITEM:\n      return {\n        ...state,\n        cartItems: addItemToCart(state.cartItems, action.payload)\n      }\n    case CartActionTypes.REMOVE_CART_ITEM:\n      return {\n        ...state,\n        cartItems: clearItem(state.cartItems, action.payload)\n      }\n    case CartActionTypes.REMOVE_ITEM_FROM_CART:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter(\n          cartItem => cartItem.id !== action.payload.id\n        )\n      }\n    case CartActionTypes.CLEAR_CART:\n      return {\n        ...state,\n        cartItems: []\n      }\n    default:\n      return state\n  }\n}\n\nexport default cartReducer"]},"metadata":{},"sourceType":"module"}