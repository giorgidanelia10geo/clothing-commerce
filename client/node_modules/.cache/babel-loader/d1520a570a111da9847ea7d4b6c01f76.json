{"ast":null,"code":"import { takeLatest, put, call, all } from 'redux-saga/effects';\nimport UserActionTypes from './userActionTypes';\nimport { auth, googleProvider, createUserProfileDocument } from '../../utils/firebase.utils';\nimport { signInSuccess, signInFailure } from './userAction';\nexport function* getSnapShotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (e) {\n    yield put(signInFailure(e));\n  }\n}\nexport function* signInWithGoogle() {\n  const {\n    user\n  } = yield auth.signInWithPopup(googleProvider);\n  yield getSnapShotFromUserAuth(user);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (e) {\n    yield put(signInFailure(e));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGNIN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGNIN_START, signInWithEmail);\n}\nexport function* userSaga() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/Users/gd/Documents/Dev/react/crwn-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","call","all","UserActionTypes","auth","googleProvider","createUserProfileDocument","signInSuccess","signInFailure","getSnapShotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","e","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGNIN_START","onEmailSignInStart","EMAIL_SIGNIN_START","userSaga"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,yBAA/B,QAAgE,4BAAhE;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,cAA7C;AAEA,OAAO,UAAUC,uBAAV,CAAkCC,QAAlC,EAA4C;AACjD,MAAI;AACF,UAAMC,OAAO,GAAG,MAAMV,IAAI,CAACK,yBAAD,EAA4BI,QAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMb,GAAG,CAACO,aAAa,CAAC;AACtBO,MAAAA,EAAE,EAAEF,YAAY,CAACE,EADK;AACD,SAAGF,YAAY,CAACG,IAAb;AADF,KAAD,CAAd,CAAT;AAGD,GAND,CAME,OAAOC,CAAP,EAAU;AACV,UAAMhB,GAAG,CAACQ,aAAa,CAACQ,CAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUC,gBAAV,GAA6B;AAClC,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMd,IAAI,CAACe,eAAL,CAAqBd,cAArB,CAAvB;AACA,QAAMI,uBAAuB,CAACS,IAAD,CAA7B;AACD;AAED,OAAO,UAAUE,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA1B,EAA4D;AACjE,MAAI;AACF,UAAM;AAAEL,MAAAA;AAAF,QAAW,MAAMd,IAAI,CAACoB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAvB;AACA,UAAMZ,OAAO,GAAG,MAAMV,IAAI,CAACK,yBAAD,EAA4BY,IAA5B,CAA1B;AACA,UAAMN,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMb,GAAG,CAACO,aAAa,CAAC;AACtBO,MAAAA,EAAE,EAAEF,YAAY,CAACE,EADK;AACD,SAAGF,YAAY,CAACG,IAAb;AADF,KAAD,CAAd,CAAT;AAGD,GAPD,CAOE,OAAOC,CAAP,EAAU;AACV,UAAMhB,GAAG,CAACQ,aAAa,CAACQ,CAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUS,mBAAV,GAAgC;AACrC,QAAM1B,UAAU,CAACI,eAAe,CAACuB,mBAAjB,EAAsCT,gBAAtC,CAAhB;AACD;AAGD,OAAO,UAAUU,kBAAV,GAA+B;AACpC,QAAM5B,UAAU,CAACI,eAAe,CAACyB,kBAAjB,EAAqCR,eAArC,CAAhB;AACD;AAED,OAAO,UAAUS,QAAV,GAAqB;AAC1B,QAAM3B,GAAG,CAAC,CAACD,IAAI,CAACwB,mBAAD,CAAL,EAA4BxB,IAAI,CAAC0B,kBAAD,CAAhC,CAAD,CAAT;AACD","sourcesContent":["import { takeLatest, put, call, all } from 'redux-saga/effects'\nimport UserActionTypes from './userActionTypes'\nimport { auth, googleProvider, createUserProfileDocument } from '../../utils/firebase.utils'\nimport { signInSuccess, signInFailure } from './userAction'\n\nexport function* getSnapShotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth)\n    const userSnapshot = yield userRef.get()\n    yield put(signInSuccess({\n      id: userSnapshot.id, ...userSnapshot.data()\n    }))\n  } catch (e) {\n    yield put(signInFailure(e))\n  }\n}\n\nexport function* signInWithGoogle() {\n  const { user } = yield auth.signInWithPopup(googleProvider)\n  yield getSnapShotFromUserAuth(user)\n}\n\nexport function* signInWithEmail({ payload: { email, password } }) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password)\n    const userRef = yield call(createUserProfileDocument, user)\n    const userSnapshot = yield userRef.get()\n    yield put(signInSuccess({\n      id: userSnapshot.id, ...userSnapshot.data()\n    }))\n  } catch (e) {\n    yield put(signInFailure(e))\n  }\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGNIN_START, signInWithGoogle)\n}\n\n\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGNIN_START, signInWithEmail)\n}\n\nexport function* userSaga() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)])\n}"]},"metadata":{},"sourceType":"module"}