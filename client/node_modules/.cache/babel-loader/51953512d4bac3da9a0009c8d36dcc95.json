{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga/effects';\nimport ShopActionsTypes from './shopActionsTypes';\nimport { firestore, convertCollectionSnapshotToMap } from '../../utils/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shopAction';\nexport function* fetchCollectionsStartAsync() {\n  try {\n    const collectionsRef = firestore.collection('collections');\n    const snapshot = yield collectionsRef.get();\n    const collectionsMap = yield call(convertCollectionSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (e) {}\n\n  yield put(fetchCollectionsFailure(e.message));\n}\nexport function* fetchCollectionStart() {\n  yield takeEvery(ShopActionsTypes.FETCH_COLLECTION_START, fetchCollectionsStartAsync);\n}","map":{"version":3,"sources":["/Users/gd/Documents/Dev/react/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","put","ShopActionsTypes","firestore","convertCollectionSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","fetchCollectionsStartAsync","collectionsRef","collection","snapshot","get","collectionsMap","e","message","fetchCollectionStart","FETCH_COLLECTION_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,SAASC,SAAT,EAAoBC,8BAApB,QAA0D,4BAA1D;AACA,SAASC,uBAAT,EAAkCC,uBAAlC,QAAiE,cAAjE;AAGA,OAAO,UAAUC,0BAAV,GAAuC;AAC5C,MAAI;AACF,UAAMC,cAAc,GAAGL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAAvB;AACA,UAAMC,QAAQ,GAAG,MAAMF,cAAc,CAACG,GAAf,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMZ,IAAI,CAACI,8BAAD,EAAiCM,QAAjC,CAAjC;AACA,UAAMT,GAAG,CAACI,uBAAuB,CAACO,cAAD,CAAxB,CAAT;AACD,GALD,CAKE,OAAOC,CAAP,EAAU,CAAG;;AACf,QAAMZ,GAAG,CAACK,uBAAuB,CAACO,CAAC,CAACC,OAAH,CAAxB,CAAT;AACD;AAED,OAAO,UAAUC,oBAAV,GAAiC;AACtC,QAAMhB,SAAS,CACbG,gBAAgB,CAACc,sBADJ,EAEbT,0BAFa,CAAf;AAID","sourcesContent":["import { takeEvery, call, put } from 'redux-saga/effects'\nimport ShopActionsTypes from './shopActionsTypes'\nimport { firestore, convertCollectionSnapshotToMap } from '../../utils/firebase.utils'\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shopAction'\n\n\nexport function* fetchCollectionsStartAsync() {\n  try {\n    const collectionsRef = firestore.collection('collections')\n    const snapshot = yield collectionsRef.get()\n    const collectionsMap = yield call(convertCollectionSnapshotToMap, snapshot)\n    yield put(fetchCollectionsSuccess(collectionsMap))\n  } catch (e) { }\n  yield put(fetchCollectionsFailure(e.message))\n}\n\nexport function* fetchCollectionStart() {\n  yield takeEvery(\n    ShopActionsTypes.FETCH_COLLECTION_START,\n    fetchCollectionsStartAsync\n  )\n}"]},"metadata":{},"sourceType":"module"}