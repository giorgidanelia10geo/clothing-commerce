{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga/effects';\nimport ShopActionsTypes from './shopActionsTypes';\nimport { firestore, convertCollectionSnapshotToMap } from '../../utils/firebase.utils';\nexport function* fetchCollectionsStartAsync() {\n  yield console.log('I FIRED');\n  const collectionsRef = firestore.collection('collections');\n  dispatch(fetchCollectionsStart());\n  collectionsRef.get().then(snapshot => {\n    const collectionsMap = convertCollectionSnapshotToMap(snapshot);\n    dispatch(fetchCollectionsSuccess(collectionsMap));\n  }).then(err => dispatch(fetchCollectionsFailure(err)));\n}\nexport function* fetchCollectionStart() {\n  yield takeEvery(ShopActionsTypes.FETCH_COLLECTION_START, fetchCollectionsStartAsync);\n}","map":{"version":3,"sources":["/Users/gd/Documents/Dev/react/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","put","ShopActionsTypes","firestore","convertCollectionSnapshotToMap","fetchCollectionsStartAsync","console","log","collectionsRef","collection","dispatch","fetchCollectionsStart","get","then","snapshot","collectionsMap","fetchCollectionsSuccess","err","fetchCollectionsFailure","fetchCollectionStart","FETCH_COLLECTION_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,SAASC,SAAT,EAAoBC,8BAApB,QAA0D,4BAA1D;AAGA,OAAO,UAAUC,0BAAV,GAAuC;AAC5C,QAAMC,OAAO,CAACC,GAAR,CAAY,SAAZ,CAAN;AAEA,QAAMC,cAAc,GAAGL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAAvB;AACAC,EAAAA,QAAQ,CAACC,qBAAqB,EAAtB,CAAR;AAEAH,EAAAA,cAAc,CACXI,GADH,GAEGC,IAFH,CAEQC,QAAQ,IAAI;AAChB,UAAMC,cAAc,GAAGX,8BAA8B,CAACU,QAAD,CAArD;AACAJ,IAAAA,QAAQ,CAACM,uBAAuB,CAACD,cAAD,CAAxB,CAAR;AACD,GALH,EAMGF,IANH,CAMQI,GAAG,IAAIP,QAAQ,CAACQ,uBAAuB,CAACD,GAAD,CAAxB,CANvB;AAOD;AAED,OAAO,UAAUE,oBAAV,GAAiC;AACtC,QAAMpB,SAAS,CACbG,gBAAgB,CAACkB,sBADJ,EAEbf,0BAFa,CAAf;AAID","sourcesContent":["import { takeEvery, call, put } from 'redux-saga/effects'\nimport ShopActionsTypes from './shopActionsTypes'\nimport { firestore, convertCollectionSnapshotToMap } from '../../utils/firebase.utils'\n\n\nexport function* fetchCollectionsStartAsync() {\n  yield console.log('I FIRED')\n\n  const collectionsRef = firestore.collection('collections')\n  dispatch(fetchCollectionsStart())\n\n  collectionsRef\n    .get()\n    .then(snapshot => {\n      const collectionsMap = convertCollectionSnapshotToMap(snapshot)\n      dispatch(fetchCollectionsSuccess(collectionsMap))\n    })\n    .then(err => dispatch(fetchCollectionsFailure(err)))\n}\n\nexport function* fetchCollectionStart() {\n  yield takeEvery(\n    ShopActionsTypes.FETCH_COLLECTION_START,\n    fetchCollectionsStartAsync\n  )\n}"]},"metadata":{},"sourceType":"module"}