{"ast":null,"code":"import { takeLatest, put, call, all } from 'redux-saga/effects';\nimport UserActionTypes from './userActionTypes';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../utils/firebase.utils';\nimport { signInSuccess, signInFailure, signOutFailure, signOutSuccess, signUpFailure } from './userAction';\nexport function* getSnapShotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (e) {\n    yield put(signInFailure(e));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapShotFromUserAuth(user);\n  } catch (e) {\n    yield put(signInFailure(e));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapShotFromUserAuth(user);\n  } catch (e) {\n    yield put(signInFailure(e));\n  }\n}\nexport function* checkUserSession() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapShotFromUserAuth(userAuth);\n  } catch (e) {\n    yield put(signInFailure(e));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (e) {\n    yield put(signOutFailure(e));\n  }\n}\nexport function* signUp({\n  email,\n  password,\n  displayName\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n  } catch (e) {\n    yield put(signUpFailure(e));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGNIN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGNIN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, checkUserSession);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGNUP_START, signUp);\n}\nexport function* userSaga() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart)]);\n}","map":{"version":3,"sources":["/Users/gd/Documents/Dev/react/crwn-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","call","all","UserActionTypes","auth","googleProvider","createUserProfileDocument","getCurrentUser","signInSuccess","signInFailure","signOutFailure","signOutSuccess","signUpFailure","getSnapShotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","e","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","checkUserSession","signOut","signUp","displayName","createUserWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGNIN_START","onEmailSignInStart","EMAIL_SIGNIN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGNUP_START","userSaga"],"mappings":"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","sourcesContent":["import { takeLatest, put, call, all } from 'redux-saga/effects'\nimport UserActionTypes from './userActionTypes'\nimport {\n  auth,\n  googleProvider,\n  createUserProfileDocument,\n  getCurrentUser,\n} from '../../utils/firebase.utils'\nimport {\n  signInSuccess,\n  signInFailure,\n  signOutFailure,\n  signOutSuccess,\n  signUpFailure\n} from './userAction'\n\nexport function* getSnapShotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth)\n    const userSnapshot = yield userRef.get()\n    yield put(signInSuccess({\n      id: userSnapshot.id, ...userSnapshot.data()\n    }))\n  } catch (e) {\n    yield put(signInFailure(e))\n  }\n}\n\nexport function* signInWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider)\n    yield getSnapShotFromUserAuth(user)\n  } catch (e) {\n    yield put(signInFailure(e))\n  }\n}\n\nexport function* signInWithEmail({ payload: { email, password } }) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password)\n    yield getSnapShotFromUserAuth(user)\n  } catch (e) {\n    yield put(signInFailure(e))\n  }\n}\n\nexport function* checkUserSession() {\n  try {\n    const userAuth = yield getCurrentUser()\n    if (!userAuth) return\n    yield getSnapShotFromUserAuth(userAuth)\n  } catch (e) {\n    yield put(signInFailure(e))\n  }\n}\n\nexport function* signOut() {\n  try {\n    yield auth.signOut()\n    yield put(signOutSuccess())\n  } catch (e) {\n    yield put(signOutFailure(e))\n  }\n}\n\nexport function* signUp({ email, password, displayName }) {\n  try {\n    const { user } = yield auth.createUserWithEmailAndPassword(email, password)\n\n  } catch (e) {\n    yield put(signUpFailure(e))\n  }\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGNIN_START, signInWithGoogle)\n}\n\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGNIN_START, signInWithEmail)\n}\n\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, checkUserSession)\n}\n\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut)\n}\n\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGNUP_START, signUp)\n}\n\nexport function* userSaga() {\n  yield all([\n    call(onGoogleSignInStart),\n    call(onEmailSignInStart),\n    call(onCheckUserSession),\n    call(onSignOutStart)\n  ])\n}"]},"metadata":{},"sourceType":"module"}