{"ast":null,"code":"import { takeLatest, put, call, all } from 'redux-saga/effects';\nimport UserActionTypes from './userActionTypes';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../utils/firebase.utils';\nimport { signInSuccess, signInFailure, signOutFailure, signOutSuccess, signUpFailure, signUpSuccess } from './userAction';\nexport function* getSnaphotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (e) {\n    yield put(signInFailure(e));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnaphotFromUserAuth(user);\n  } catch (e) {\n    yield put(signInFailure(e));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnaphotFromUserAuth(user);\n  } catch (e) {\n    yield put(signInFailure(e));\n  }\n}\nexport function* checkUserSession() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnaphotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (e) {\n    yield put(signOutFailure(e));\n  }\n}\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (e) {\n    yield put(signUpFailure(e));\n  }\n}\nexport function* signInAfterSignUp({\n  payload: {\n    user,\n    additionalData\n  }\n}) {\n  yield getSnaphotFromUserAuth(user, additionalData);\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGNIN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGNIN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, checkUserSession);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGNUP_START, signUp);\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGNUP_SUCCESS, signInAfterSignUp);\n}\nexport function* userSaga() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart), call(onSignUpStart), call(onSignUpSuccess)]);\n}","map":{"version":3,"sources":["/Users/gd/Documents/Dev/react/crwn-clothing/client/src/redux/user/user.sagas.js"],"names":["takeLatest","put","call","all","UserActionTypes","auth","googleProvider","createUserProfileDocument","getCurrentUser","signInSuccess","signInFailure","signOutFailure","signOutSuccess","signUpFailure","signUpSuccess","getSnaphotFromUserAuth","userAuth","additionalData","userRef","userSnapshot","get","id","data","e","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","checkUserSession","error","signOut","signUp","displayName","createUserWithEmailAndPassword","signInAfterSignUp","onGoogleSignInStart","GOOGLE_SIGNIN_START","onEmailSignInStart","EMAIL_SIGNIN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGNUP_START","onSignUpSuccess","SIGNUP_SUCCESS","userSaga"],"mappings":"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","sourcesContent":["import { takeLatest, put, call, all } from 'redux-saga/effects'\nimport UserActionTypes from './userActionTypes'\nimport {\n  auth,\n  googleProvider,\n  createUserProfileDocument,\n  getCurrentUser,\n} from '../../utils/firebase.utils'\nimport {\n  signInSuccess,\n  signInFailure,\n  signOutFailure,\n  signOutSuccess,\n  signUpFailure,\n  signUpSuccess\n} from './userAction'\n\nexport function* getSnaphotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData)\n    const userSnapshot = yield userRef.get()\n    yield put(signInSuccess({\n      id: userSnapshot.id, ...userSnapshot.data()\n    }))\n  } catch (e) {\n    yield put(signInFailure(e))\n  }\n}\n\nexport function* signInWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider)\n    yield getSnaphotFromUserAuth(user)\n  } catch (e) {\n    yield put(signInFailure(e))\n  }\n}\n\nexport function* signInWithEmail({ payload: { email, password } }) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password)\n    yield getSnaphotFromUserAuth(user)\n  } catch (e) {\n    yield put(signInFailure(e))\n  }\n}\n\nexport function* checkUserSession() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnaphotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* signOut() {\n  try {\n    yield auth.signOut()\n    yield put(signOutSuccess())\n  } catch (e) {\n    yield put(signOutFailure(e))\n  }\n}\n\nexport function* signUp({ payload: { email, password, displayName } }) {\n  try {\n    const { user } = yield auth.createUserWithEmailAndPassword(email, password)\n    yield put(signUpSuccess({ user, additionalData: { displayName } }))\n  } catch (e) {\n    yield put(signUpFailure(e))\n  }\n}\n\nexport function* signInAfterSignUp({ payload: { user, additionalData } }) {\n  yield getSnaphotFromUserAuth(user, additionalData)\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGNIN_START, signInWithGoogle)\n}\n\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGNIN_START, signInWithEmail)\n}\n\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, checkUserSession)\n}\n\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut)\n}\n\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGNUP_START, signUp)\n}\n\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGNUP_SUCCESS, signInAfterSignUp)\n}\n\nexport function* userSaga() {\n  yield all([\n    call(onGoogleSignInStart),\n    call(onEmailSignInStart),\n    call(onCheckUserSession),\n    call(onSignOutStart),\n    call(onSignUpStart),\n    call(onSignUpSuccess),\n  ])\n}"]},"metadata":{},"sourceType":"module"}