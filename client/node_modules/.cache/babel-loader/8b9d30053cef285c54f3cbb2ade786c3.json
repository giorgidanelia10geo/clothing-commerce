{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/gd/Documents/Dev/react/crwn-clothing/src/pages/shopPage/ShopPage.js\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionOverview from '../../components/collectionoverview/CollectionOverview';\nimport CollectionPage from '../../pages/CollectionPage/CollectionPage';\nimport { firestore, convertCollectionSnapshotToMap } from '../../utils/firebase.utils';\nimport { updateCollections } from '../../redux/shop/shopAction';\nimport WithLoader from '../../components/loader/Loader';\nimport './ShopPage.scss';\nconst CollectionOverviewLoader = WithLoader(CollectionOverview);\n_c = CollectionOverviewLoader;\nconst CollectionPageLoader = WithLoader(CollectionPage);\n_c2 = CollectionPageLoader;\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionOverviewLoader, {\n          isLoading: loading,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionPageLoader, {\n          isLoading: loading,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CollectionOverviewLoader\");\n$RefreshReg$(_c2, \"CollectionPageLoader\");","map":{"version":3,"sources":["/Users/gd/Documents/Dev/react/crwn-clothing/src/pages/shopPage/ShopPage.js"],"names":["React","Route","connect","CollectionOverview","CollectionPage","firestore","convertCollectionSnapshotToMap","updateCollections","WithLoader","CollectionOverviewLoader","CollectionPageLoader","ShopPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","get","then","snapshot","collectionsMap","setState","render","match","path","mapDispatchToProps","dispatch"],"mappings":";;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,kBAAP,MAA+B,wDAA/B;AACA,OAAOC,cAAP,MAA2B,2CAA3B;AACA,SAASC,SAAT,EAAoBC,8BAApB,QAA0D,4BAA1D;AACA,SAASC,iBAAT,QAAkC,6BAAlC;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AAEA,OAAO,iBAAP;AAEA,MAAMC,wBAAwB,GAAGD,UAAU,CAACL,kBAAD,CAA3C;KAAMM,wB;AACN,MAAMC,oBAAoB,GAAGF,UAAU,CAACJ,cAAD,CAAvC;MAAMM,oB;;AACN,MAAMC,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B;AACNC,MAAAA,OAAO,EAAE;AADH,KAD6B;AAAA,SAIrCC,uBAJqC,GAIX,IAJW;AAAA;;AAMrCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAET,MAAAA;AAAF,QAAwB,KAAKU,KAAnC;AACA,UAAMC,aAAa,GAAGb,SAAS,CAACc,UAAV,CAAqB,aAArB,CAAtB;AAEAD,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACnC,YAAMC,cAAc,GAAGjB,8BAA8B,CAACgB,QAAD,CAArD;AACAf,MAAAA,iBAAiB,CAACgB,cAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAAEV,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KAJD;AAKD;;AAEDW,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKT,KAAvB;AACA,UAAM;AAAEH,MAAAA;AAAF,QAAc,KAAKD,KAAzB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAG,GAAEa,KAAK,CAACC,IAAK,EAAjC;AAAoC,QAAA,MAAM,EAAGV,KAAD,iBAC1C,QAAC,wBAAD;AAA0B,UAAA,SAAS,EAAEH,OAArC;AAAA,aAAkDG;AAAlD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAG,GAAES,KAAK,CAACC,IAAK,gBAA3B;AAA4C,QAAA,MAAM,EAAGV,KAAD,iBAClD,QAAC,oBAAD;AAAsB,UAAA,SAAS,EAAEH,OAAjC;AAAA,aAA8CG;AAA9C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AA9BoC;;AAiCvC,MAAMW,kBAAkB,GAAGC,QAAQ,KAAK;AACtCtB,EAAAA,iBAAiB,EAAEgB,cAAc,IAAIM,QAAQ,CAACtB,iBAAiB,CAACgB,cAAD,CAAlB;AADP,CAAL,CAAnC;;AAIA,eAAerB,OAAO,CAAC,IAAD,EAAO0B,kBAAP,CAAP,CAAkCjB,QAAlC,CAAf","sourcesContent":["\nimport React from 'react'\nimport { Route } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport CollectionOverview from '../../components/collectionoverview/CollectionOverview'\nimport CollectionPage from '../../pages/CollectionPage/CollectionPage'\nimport { firestore, convertCollectionSnapshotToMap } from '../../utils/firebase.utils'\nimport { updateCollections } from '../../redux/shop/shopAction'\nimport WithLoader from '../../components/loader/Loader'\n\nimport './ShopPage.scss'\n\nconst CollectionOverviewLoader = WithLoader(CollectionOverview)\nconst CollectionPageLoader = WithLoader(CollectionPage)\nclass ShopPage extends React.Component {\n  state = {\n    loading: true\n  }\n  unsubscribeFromSnapshot = null\n\n  componentDidMount() {\n    const { updateCollections } = this.props\n    const collectionRef = firestore.collection('collections')\n\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionSnapshotToMap(snapshot)\n      updateCollections(collectionsMap)\n      this.setState({ loading: false })\n    })\n  }\n\n  render() {\n    const { match } = this.props\n    const { loading } = this.state\n    return (\n      <div className=\"shop-page\">\n        <Route exact path={`${match.path}`} render={(props) => (\n          <CollectionOverviewLoader isLoading={loading} {...props} />\n        )} />\n        <Route path={`${match.path}/:collectionId`} render={(props) => (\n          <CollectionPageLoader isLoading={loading} {...props} />\n        )} />\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n})\n\nexport default connect(null, mapDispatchToProps)(ShopPage)"]},"metadata":{},"sourceType":"module"}